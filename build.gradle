plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.12'
    id 'application'
    id 'idea'
//    id 'com.github.johnrengelman.shadow' version '5.2.0'
}
// apply plugin: 'java'
group 'com.twdt.ljh'
version '1.0'


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri("http://maven.aliyun.com/nexus/content/groups/public/")
    }
}
compileJava {
    options.compilerArgs << "-parameters"
}
dependencies {
// https://mvnrepository.com/artifact/io.netty/netty-all
    compile 'com.alibaba:fastjson:1.2.70'
    implementation   'io.netty:netty-all:4.1.15.Final'
    implementation 'com.google.protobuf:protobuf-java:3.12.2'
    implementation 'com.google.protobuf:protobuf-java-util:3.12.2'
    // https://mvnrepository.com/artifact/org.springframework/spring-core
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation 'io.grpc:grpc-netty-shaded:1.30.1'
    implementation 'io.grpc:grpc-protobuf:1.30.1'
    implementation 'io.grpc:grpc-stub:1.30.1'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka
    implementation group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.3.1'

    // https://mvnrepository.com/artifact/org.openjdk.jol/jol-core
    implementation group: 'org.openjdk.jol', name: 'jol-core', version: '0.13'

    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.5'

    // classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.31'

    implementation group: 'org.springframework',name: 'spring-context',version: '5.2.5.RELEASE'
    // disruptor
    implementation 'com.lmax:disruptor:3.4.2'
    // kafka streams
    implementation 'org.apache.kafka:kafka-streams:2.5.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.12.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.30.1'
        }
    }
    sourceSets {
        main {
            proto {
                // 除了默认的'src/main/proto'目录新增proto文件的方法
                srcDir 'src/protobuf'
                include '**/*.protodevel'
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src"
    generateProtoTasks {
        all()*.plugins {
            grpc {
                outputSubDir = 'java'
            }
        }
    }
}
